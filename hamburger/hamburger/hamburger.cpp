#include <iostream>
#include <vector>
#include <algorithm>
#include <climits>
#include <string>
#include <ctime>
#include <map>
#include <queue>
#include <list>

using namespace std;


//기다란 벤치 모양의 식탁에 사람들과 햄버거가 아래와 같이 단위 간격으로 놓여 있다.사람들은 자신의 위치에서 거리가 $K$ 이하인 햄버거를 먹을 수 있다.

//햄버거	사람	햄버거	사람	햄버거	사람	햄버거	햄버거	사람	사람	햄버거	사람
//1	      2	       3	  4     	5	 6	      7	      8	     9	     10    	11    	12

//위의 상태에서 $K = 1$인 경우를 생각해보자.이 경우 모든 사람은 자신과 인접한 햄버거만 먹을 수 있다. 10번의 위치에 있는 사람은 11번 위치에 있는 햄버거를 먹을 수 있다.이 경우 다음과 같이 최대 5명의 사람이 햄버거를 먹을 수 있다.
//
//2번 위치에 있는 사람 : 1번 위치에 있는 햄버거
//4번 위치에 있는 사람 : 5번 위치에 있는 햄버거
//6번 위치에 있는 사람 : 7번 위치에 있는 햄버거
//9번 위치에 있는 사람 : 8번 위치에 있는 햄버거
//10번 위치에 있는 사람 : 11번 위치에 있는 햄버거
//12번 위치에 있는 사람 : 먹을 수 있는 햄버거가 없음
//$K = 2$인 경우에는 6명 모두가 햄버거를 먹을 수 있다.
//
//2번 위치에 있는 사람 : 1번 위치에 있는 햄버거
//4번 위치에 있는 사람 : 3번 위치에 있는 햄버거
//6번 위치에 있는 사람 : 5번 위치에 있는 햄버거
//9번 위치에 있는 사람 : 7번 위치에 있는 햄버거
//10번 위치에 있는 사람 : 8번 위치에 있는 햄버거
//12번 위치에 있는 사람 : 11번 위치에 있는 햄버거
//식탁의 길이 $N$, 햄버거를 선택할 수 있는 거리 $K$, 사람과 햄버거의 위치가 주어졌을 때, 햄버거를 먹을 수 있는 사람의 최대 수를 구하는 프로그램을 작성하시오.

//풀이
// 0~n-1까지 가면서 사람이 나온다면
// 사람을 기준으로
// k번만큼 ~ k번만큼 오른쪽까지 보면서 햄버거가 있다면 먹는다.


int main(void)
{

	ios_base::sync_with_stdio(0);
	cin.tie(0);

	int n, k;

	int cnt = 0;

	string s;
	cin >> n >> k;
	cin >> s;

	for (int i = 0; i < n; i++)
	{
		if (s[i] != 'P')
		{
			continue;
		}

		for (int j = i - k; j <= i + k; j++)
		{
			if (0 <= j && j < n && s[j] == 'H')
			{
				s[j] = 'E';
				cnt++;
				break;
			}
		}
	}
	cout << cnt;


	return 0;

}